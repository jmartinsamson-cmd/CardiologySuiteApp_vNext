name: Uptime Health Check

on:
  schedule:
    # Run every 5 minutes
    - cron: "*/5 * * * *"
  workflow_dispatch: # Allow manual runs

env:
  PROD_API_BASE_URL: ${{ secrets.PROD_API_BASE_URL }}
  ALERT_WEBHOOK_URL: ${{ secrets.ALERT_WEBHOOK_URL }}

jobs:
  health-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm ci

      - name: Run health check
        id: health-check
        run: |
          node scripts/uptime-health-check.js
        env:
          PROD_API_BASE_URL: ${{ env.PROD_API_BASE_URL }}

      - name: Upload metrics artifact
        uses: actions/upload-artifact@v4
        with:
          name: uptime-metrics-${{ github.run_number }}
          path: uptime-metrics.json
          retention-days: 7

      - name: Check for failures
        id: check-failure
        run: |
          if [ "${{ steps.health-check.outputs.status }}" = "failure" ]; then
            echo "failure=true" >> $GITHUB_OUTPUT
          else
            echo "failure=false" >> $GITHUB_OUTPUT
          fi

      - name: Create/Update GitHub Issue
        if: steps.check-failure.outputs.failure == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const metrics = JSON.parse(fs.readFileSync('uptime-metrics.json', 'utf8'));

            const issueTitle = 'ðŸš¨ Uptime: Health Down';
            const issueBody = `
            ## Health Check Failure

            **Status**: DOWN
            **Timestamp**: ${new Date().toISOString()}
            **Commit SHA**: \`${process.env.GITHUB_SHA}\`
            **Run ID**: ${process.env.GITHUB_RUN_ID}

            ### Metrics
            - **Total Requests**: ${metrics.totalRequests}
            - **Successful Requests**: ${metrics.successfulRequests}
            - **Error Rate**: ${metrics.errorRate}%
            - **P95 Latency**: ${metrics.p95Latency}ms
            - **Average Latency**: ${metrics.averageLatency}ms

            ### Failed Requests
            ${metrics.failedRequests.map(f => `- ${f.status}: ${f.url} (${f.latency}ms)`).join('\n')}

            ---
            *This issue was auto-generated by the uptime health check workflow.*
            `;

            // Check if issue already exists
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['uptime-health', 'automated'],
              state: 'open'
            });

            let issue = issues.data.find(i => i.title === issueTitle);

            if (issue) {
              // Update existing issue
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                body: issueBody
              });
            } else {
              // Create new issue
              issue = await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: issueTitle,
                body: issueBody,
                labels: ['uptime-health', 'automated', 'bug']
              });
            }

      - name: Send Alert Webhook
        if: steps.check-failure.outputs.failure == 'true'
        run: |
          node scripts/send-alert-webhook.js
        env:
          ALERT_WEBHOOK_URL: ${{ env.ALERT_WEBHOOK_URL }}
          GITHUB_SHA: ${{ github.sha }}
          GITHUB_RUN_ID: ${{ github.run_id }}

      - name: Fail workflow on health check failure
        if: steps.check-failure.outputs.failure == 'true'
        run: |
          echo "Health check failed - see metrics artifact and GitHub issue for details"
          exit 1

  uptime-report:
    runs-on: ubuntu-latest
    needs: health-check
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm ci

      - name: Generate uptime report
        run: |
          node scripts/uptime-report.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}

      - name: Setup Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Commit and push uptime report
        run: |
          git add docs/uptime.md docs/uptime.json docs/uptime.html
          if git diff --staged --quiet; then
            echo "No changes to uptime report"
          else
            git commit -m "docs: update uptime report [skip ci]"
            git push
          fi
